{"version":3,"sources":["ShoppingListForm.js","ShoppingLists.js","App.js","reportWebVitals.js","index.js"],"names":["ShoppingListForm","props","state","name","qty","handleChange","bind","handleSubmit","evt","this","setState","target","value","preventDefault","addItem","className","onSubmit","htmlFor","id","type","onChange","Component","ShoppingList","removeItem","item","arr","items","pos","indexOf","splice","renderItems","map","onClick","class","message","clearAll","newItem","uuidv4","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UA4DeA,E,kDAxDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,KAAM,GACNC,IAAK,IAEP,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARH,E,gDAUnB,SAAaE,GACXC,KAAKC,SAAL,eACGF,EAAIG,OAAOR,KAAOK,EAAIG,OAAOC,U,0BAGlC,SAAaJ,GACXA,EAAIK,iBACJJ,KAAKR,MAAMa,QAAQL,KAAKP,OACxBO,KAAKC,SAAS,CAAEP,KAAM,GAAIC,IAAK,O,oBAGjC,WACE,OACE,8BACE,uBAAMW,UAAU,eAAeC,SAAUP,KAAKF,aAA9C,UACE,wBAAOU,QAAQ,OAAf,kBAEE,uBACEF,UAAU,OACVG,GAAG,QACHf,KAAK,OACLS,MAAOH,KAAKP,MAAMC,KAClBgB,KAAK,OACLC,SAAUX,KAAKJ,kBAInB,wBAAOU,UAAU,iBAAiBE,QAAQ,MAA1C,sBAEE,uBACEF,UAAU,WACVG,GAAG,MACHf,KAAK,MACLS,MAAOH,KAAKP,MAAME,IAClBe,KAAK,OACLC,SAAUX,KAAKJ,kBAInB,wBAAQU,UAAU,SAAlB,gC,GAlDqBM,a,QCmFhBC,G,wDAhFb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAwBRsB,WAAa,SAAAC,GACX,IAAIC,EAAM,EAAKvB,MAAMwB,MACjBC,EAAMF,EAAIG,QAAQJ,GACtBC,EAAII,OAAOF,EAAK,GAChB,EAAKjB,SAAS,CAAEgB,MAAOD,KA7BN,EAsCnBK,YAAc,WACZ,OACE,8BACE,6BACG,EAAK5B,MAAMwB,MAAMK,KAAI,SAAAP,GAAI,OACxB,+BACE,wBACEQ,QAAS,WACP,EAAKT,WAAWC,IAFpB,SAKE,mBAAGS,MAAM,uBAEVT,EAAKrB,KARR,MAQiBqB,EAAKpB,MARboB,WAxCjB,EAAKtB,MAAQ,CACXwB,MAAO,GAIPQ,QAAS,2BAEX,EAAKpB,QAAU,EAAKA,QAAQR,KAAb,gBACf,EAAK6B,SAAW,EAAKA,SAAS7B,KAAd,gBAXC,E,2CAanB,SAAQkB,GACN,IAAIY,EAAO,2BAAQZ,GAAR,IAAcN,GAAImB,gBAC7B5B,KAAKC,UAAS,SAAAR,GAAK,MAAK,CACtBwB,MAAM,GAAD,mBAAMxB,EAAMwB,OAAZ,CAAmBU,U,sBAe5B,WACE3B,KAAKC,SAAS,CACZgB,MAAO,GACPQ,QAAS,8B,oBAyBb,WAAU,IAAD,EACoBzB,KAAKP,MAAxBgC,EADD,EACCA,QAASR,EADV,EACUA,MAEjB,OACE,sBAAKX,UAAU,QAAf,UACE,+CACkB,IAAjBW,EAAMY,QAAgB,4BAAIJ,IAE1BzB,KAAKqB,cACO,KAAZI,GAAkBR,EAAMY,OAAS,EAClC,cAAC,EAAD,CAAkBxB,QAASL,KAAKK,UAChC,qBAAKC,UAAU,kBAAf,SACE,wBAAQA,UAAU,SAASiB,QAASvB,KAAK0B,SAAzC,kC,GAxEiBd,cCUZkB,E,4JATb,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUM,aCOHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39f0eb9e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ShoppingListForm.css\";\n\nclass ShoppingListForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      qty: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault(); // to not refresh the page\n    this.props.addItem(this.state);\n    this.setState({ name: \"\", qty: \"\" });\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"Form-details\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">\n            Name:\n            <input\n              className=\"Name\"\n              id=\"namme\"\n              name=\"name\"\n              value={this.state.name}\n              type=\"text\"\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className=\"Label-Quantity\" htmlFor=\"qty\">\n            Quantity:\n            <input\n              className=\"Quantity\"\n              id=\"qty\"\n              name=\"qty\"\n              value={this.state.qty}\n              type=\"text\"\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button className=\"Button\">Add Items</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingListForm;\n","import React, { Component } from \"react\";\nimport ShoppingListform from \"./ShoppingListForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./ShoppingLists.css\";\n\nclass ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [\n        // { name: \"Milk\", qty: \"2 gallons\", id: uuidv4() },\n        // { name: \"Bread\", qty: \"2 loaves\", id: uuidv4() },\n      ],\n      message: \"add items on your list!\"\n    };\n    this.addItem = this.addItem.bind(this);\n    this.clearAll = this.clearAll.bind(this);\n  }\n  addItem(item) {\n    let newItem = { ...item, id: uuidv4() };\n    this.setState(state => ({\n      items: [...state.items, newItem]\n    }));\n  }\n  /*remove(id) {\n    this.setState({\n      items: this.state.items.filter(item => item.id != id)\n    });\n  }*/\n\n  removeItem = item => {\n    let arr = this.state.items;\n    let pos = arr.indexOf(item);\n    arr.splice(pos, 1);\n    this.setState({ items: arr });\n  };\n  clearAll() {\n    this.setState({\n      items: [],\n      message: \"No items on your list !\"\n    });\n  }\n\n  renderItems = () => {\n    return (\n      <div>\n        <ul>\n          {this.state.items.map(item => (\n            <li key={item}>\n              <button\n                onClick={() => {\n                  this.removeItem(item);\n                }}\n              >\n                <i class=\"fas fa-trash-alt\"></i>\n              </button>\n              {item.name} : {item.qty}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n  render() {\n    const { message, items } = this.state;\n\n    return (\n      <div className=\"Lists\">\n        <h1>Shopping List</h1>\n        {items.length === 0 && <p>{message}</p>}\n\n        {this.renderItems()}\n        {message === \"\" || items.length > 0}\n        <ShoppingListform addItem={this.addItem} />\n        <div className=\"Button-clearAll\">\n          <button className=\"Button\" onClick={this.clearAll}>\n            Clear Lists\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingList;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport ShoppingLists from \"./ShoppingLists\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ShoppingLists />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}